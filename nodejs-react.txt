📂 backend
│── 📂 src (thư mục chứa toàn bộ source code)
│    │── 📂 config (Cấu hình hệ thống: env, database, logger, etc.)
│    │    │── database.js (Kết nối DB: MySQL, PostgreSQL, MongoDB, etc.)
│    │    │── logger.js (Cấu hình logging - Winston, Pino, etc.)
│    │    │── env.js (Load biến môi trường từ .env)
│
│    │── 📂 models (Định nghĩa schema/model của DB - ORM như Sequelize/Mongoose)
│    │    │── User.js
│    │    │── InsurancePolicy.js (Chính sách bảo hiểm)
│    │    │── Claim.js (Hồ sơ yêu cầu bảo hiểm)
│
│    │── 📂 controllers (Xử lý logic nhận request từ route và gọi service)
│    │    │── authController.js (Đăng ký, đăng nhập, xác thực)
│    │    │── policyController.js (Quản lý hợp đồng bảo hiểm)
│    │    │── claimController.js (Yêu cầu bồi thường bảo hiểm)
│
│    │── 📂 services (Xử lý logic nghiệp vụ, gọi model thao tác với DB)
│    │    │── authService.js (Xác thực JWT, mã hóa mật khẩu, etc.)
│    │    │── policyService.js (Tạo, cập nhật, quản lý hợp đồng bảo hiểm)
│    │    │── claimService.js (Xử lý yêu cầu bồi thường)
│
│    │── 📂 middlewares (Middleware xử lý request như xác thực, logging, etc.)
│    │    │── authMiddleware.js (Xác thực JWT, phân quyền user)
│    │    │── errorHandler.js (Bắt lỗi toàn cục)
│
│    │── 📂 routes (Khai báo API endpoints, ánh xạ đến controllers)
│    │    │── authRoutes.js (Đăng ký, đăng nhập, logout)
│    │    │── policyRoutes.js (API hợp đồng bảo hiểm)
│    │    │── claimRoutes.js (API yêu cầu bồi thường)
│    │── index.js (Tập hợp các route thành 1 entry-point)
│
│    │── 📂 utils (Các hàm tiện ích dùng chung như xử lý ngày giờ, mã hóa)
│    │    │── dateHelper.js (Chuyển đổi định dạng ngày tháng)
│    │    │── cryptoHelper.js (Mã hóa bcrypt, AES, etc.)
│
│    │── app.js (Cấu hình server, kết nối DB, apply middleware)
│
│── 📂 tests (Test cases cho API - Jest, Mocha, etc.)
│    │── auth.test.js (Test API xác thực)
│    │── policy.test.js (Test API hợp đồng bảo hiểm)
│
│── 📂 docs (Tài liệu API, hướng dẫn cài đặt, file OpenAPI/Swagger)
│
│── .env (Biến môi trường: DB_URI, JWT_SECRET, etc.)
│── .gitignore (Loại trừ node_modules, logs, etc. khỏi git)
│── package.json (Khai báo dependencies và scripts)
│── README.md (Hướng dẫn cài đặt & sử dụng)

📂 frontend (React - SPA dùng Vite hoặc CRA)
│── 📂 public (Chứa các file tĩnh, favicon, manifest.json)
│── 📂 src (Chứa toàn bộ source code frontend)
│    │── 📂 assets (Chứa ảnh, fonts, icons, styles chung)
│    │── 📂 components (Chứa các UI component dùng chung - Button, Card, Modal...)
│    │    │── Button.jsx
│    │    │── Navbar.jsx
│    │    │── Sidebar.jsx
│    │    │── LoadingSpinner.jsx
│
│    │── 📂 layouts (Layout tổng thể như AdminLayout, UserLayout...)
│    │    │── AdminLayout.jsx
│    │    │── UserLayout.jsx
│
│    │── 📂 pages (Chứa từng trang chính của ứng dụng)
│    │    │── 📂 auth (Trang đăng nhập, đăng ký...)
│    │    │    │── Login.jsx
│    │    │    │── Register.jsx
│    │    │── 📂 dashboard (Trang quản lý bảo hiểm, danh sách user...)
│    │    │    │── Dashboard.jsx
│    │    │── 📂 claims (Trang quản lý yêu cầu bảo hiểm)
│    │    │    │── ClaimList.jsx
│    │    │    │── ClaimDetail.jsx
│    │── 📂 redux (Quản lý state với Redux Toolkit hoặc Zustand)
│    │    │── store.js
│    │    │── 📂 slices (Chia nhỏ state theo module: auth, claims...)
│    │    │    │── authSlice.js
│    │    │    │── claimSlice.js
│
│    │── 📂 services (Chứa các hàm gọi API bằng Axios hoặc Fetch)
│    │    │── api.js (Cấu hình base URL của API)
│    │    │── authService.js (Xử lý API đăng nhập, đăng ký)
│    │    │── claimService.js (Xử lý API yêu cầu bảo hiểm)
│
│    │── 📂 hooks (Custom hooks như useAuth, useFetch...)
│    │── 📂 utils (Các hàm tiện ích như format tiền tệ, xử lý thời gian)
│    │── 📂 styles (Chứa các file CSS hoặc Tailwind config)
│    │── App.jsx (Component gốc của ứng dụng)
│    │── main.jsx (Entry-point render React vào DOM)
│
│── .env (Chứa biến môi trường - API URL, etc.)
│── vite.config.js (Cấu hình Vite nếu dùng Vite thay vì CRA)
│── package.json (Danh sách dependencies frontend)
│── README.md (Hướng dẫn cài đặt và chạy frontend)

